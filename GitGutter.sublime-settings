{
  /****************************************************************************
    Plugin State
  ****************************************************************************/
  /*
    Set false to disable evaluation of changes and hide all gutter icons,
    status message and minimap marker.
  */
  "enable": true,

  /****************************************************************************
    Git Path
  ****************************************************************************/

  /*
    Custom path to git binary when not in PATH.  An empty string will search
    PATH for "git".  The setting may be a direct string to a git binary, e.g.:

      "git_binary": "/usr/bin/git",

    Or it may be a dictionary keyed off what sublime.platform() returns,
    so it may be customized on a per-platform basis.  e.g.:

      "git_binary": {
          "default": "",
          "windows": "C:/Program Files/Git/cmd/git.exe"
      },
  */
  "git_binary": "/usr/local/bin/git",


  /****************************************************************************
    Git Diff
  ****************************************************************************/

  /*
    The commit, branch, tag, or remote to compare against

    Can be set on a per-project basis by adding a project
    setting of "git_gutter_compare_against".

    This setting only changes the default (HEAD), but can
    still be overwritten temporarily using one of the commands
  */
  "compare_against": "HEAD",

  /*
    The algorithm used by git diff to determine the differences.

    "default": let git decide (don't pass an algorithm)
    "minimal": use minimal diff algorithm
    "patience": use patience diff algorithm
                see: http://bramcohen.livejournal.com/73318.html
    "histogram": use histogram diff algorithm
  */
  "diff_algorithm": "patience",

  /*
    Determines whether GitGutter ignores whitespace in modified files.
    Set "none" to ensure whitespace is considered in the diff
    Set "eol" to only ignore whitespace at the end of lines
    Set "space" to ignore changes in amount of white space
    Set "all" to ignore all white space
  */
  "ignore_whitespace": "none",

  /*
    (ST3, Build 3119+ only)

    Enable an hover popup, which shows an diff of the
    changed lines.
  */
  "enable_hover_diff_popup": true,

  /*
    (ST3 only) The default mode to open the diff popup.

    This will be used for the hover popup, the command palette entry,
    and the default keybinding.

    Possible modes are:
    "default": Show the previous git state in the popup
    "diff": Compare the git state to the working state and highlight
            the differences in the popup
  */
  "diff_popup_default_mode": "default",

  /****************************************************************************
    Timing
  ****************************************************************************/

  /*
    Live mode evaluates changes every time file is modified,
    Set false to disable evaluation after each input
  */
  "live_mode": true,

  /*
    Focus Change mode evaluates changes every time a view gets the focus
    Set false to disable evaluation when changing views
  */
  "focus_change_mode": true,

  /*
    When using non_blocking mode, delay update of gutter icons by the
    following amount (in milliseconds).
  */
  "debounce_delay": 1000,

  /****************************************************************************
    Sublime UI
  ****************************************************************************/

  // The gutter theme defines the icons to show for the different events.
  "theme": "Default.gitgutter-theme",

  /*
    Determines whether GitGutter will show informations in the status bar

    Set false to disable status information.
    Set true to show information using the "status_bar_text" template.
  */
  "show_status_bar_text": "true",

  /*
    STATUS BAR TEXT TEMPLATE

    The array is joined to a single string and passed to jinja2 template
    engine to render the status message text. The template can be modified using
    jinja2 supported syntax. GitGutter provides the following variables:
      {{repo}}     -- repository name / folder name containing the .git directory
      {{branch}}   -- checked out branch you are working on
      {{remote}}   -- tracked remote of current branch you are working on or `None`
      {{ahead}}    -- number of commits the local branch is ahead of remote
      {{behind}}   -- number of commits the local branch is behind remote
      {{added_files}}    -- number of untracked files added to working tree
      {{deleted_files}}  -- number of files deleted from working tree
      {{modified_files}} -- number of modified files in the working tree
      {{staged_files}}   -- number of files in the staging area
      {{compare}}  -- commit/branch/HEAD the file is compared to
      {{state}}    -- One of committed/modified/ignored/untracked
      {{deleted}}  -- number of deleted regions
      {{inserted}} -- number of inserted lines
      {{modified}} -- number of modified lines
  */
  "status_bar_text": [
    "In {{repo}} on {{branch}}",
    "{% if compare not in ('HEAD', branch) %}, Comparing against {{compare}}{% endif %}",
    ", File is {{state}}",
    "{% if deleted != 0 %}, {{deleted}}-{% endif %}",
    "{% if inserted != 0 %}, {{inserted}}+{% endif %}",
    "{% if modified != 0 %}, {{modified}}â‰ {% endif %}"
  ],

  /*
    Show GitGutter information in the minimap

    =0: Hide markers
    >0s: Width of markers
    -1: Highlight full line
  */
  "show_in_minimap": 0,

  /*
    Determines whether the git_gutter_next_change and git_gutter_prev_change
    commands wrap around on reaching the beginning/ending of the file.
  */
  "next_prev_change_wrap": true,

  //  Add a special marker on untracked files
  "show_markers_on_untracked_file": true,

  /*
    Do not set GitGutter icons in these regions
    Useful for making sure GitGutter does not override other
    regions, (e.g. Bookmarks, Linter/BracketHighlighter icons.)
  */
  "protected_regions": [
    "anaconda-lint-outlines-illegal",
    "anaconda-lint-outlines-violation",
    "anaconda-lint-outlines-warning",
    "sublimelinter-error-gutter-marks",
    "sublimelinter-warning-gutter-marks",
    "bookmarks",
    "lsp_error",
    "lsp_warning",
    "lsp_info"
  ],
}
